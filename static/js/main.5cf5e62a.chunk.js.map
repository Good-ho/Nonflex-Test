{"version":3,"sources":["assets/default.png","component/Section.js","component/Loader.js","component/Error.js","component/Poster.js","route/Home/HomePresenter.js","api.js","route/Home/index.js","route/Home/HomeContainer.js","route/TV/TVPresenter.js","route/TV/index.js","route/TV/TVContainer.js","route/Search/SearchPresenter.js","route/Search/index.js","route/Search/SearchContainer.js","route/Detail/DetailPresenter.js","route/Detail/index.js","route/Detail/DetailContainer.js","component/Header.js","component/Router.js","component/GlobalStyled.js","component/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","Error","text","Image","props","bgUrl","ImageContainer","Rating","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","topRated","popular","error","loading","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","movieApi","get","params","api_key","language","append_to_response","term","query","encodeURI","tvApi","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","airingToday","tv","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResult","tvResult","searchTerm","handleSumit","updateTerm","onSubmit","placeholder","value","onChange","release_data","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemCotainer","Item","Divider","OverView","p","DetailPresenter","result","backdrop_path","name","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","pathname","location","includes","match","push","history","parseId","parseInt","isNaN","List","ul","Header","header","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cf5e62a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.4bcceef7.png\";","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){\r\n        margin-bottom:50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size:16px;\r\n    font-weight:600;    \r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top:25px;\r\n    display:grid;\r\n    grid-template-columns:repeat(auto-fill, 125px);\r\n    grid-gap:25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n\r\n);\r\n\r\nSection.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n    children:PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default Section;\r\n\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height:100vh;\r\n    width:100vh;\r\n    display:flex;\r\n    justify-content:center;\r\n    font-size:32px;\r\n    margin-top:20px;\r\n`;\r\n\r\nexport default () => <Container><span role=\"img\" aria-label = \"Loading\">⏰</span></Container>\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color:#ff9966;\r\n    font-weight:600;\r\n`;\r\n\r\nconst Error = ({ text }) =>   \r\n  <Container>\r\n    <Text>{text}</Text>\r\n  </Container>;\r\n\r\n\r\nError.propTypes = {\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n    font-size:12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    background-image:url(${props => `${props.bgUrl}`});\r\n    height:180px;\r\n    background-size:cover;\r\n    border-radius:4px;\r\n    background-position:center center;\r\n    transition:opacity 0.3s ease-in-out;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom:5px;\r\n    position:relative;\r\n    &:hover{\r\n        ${Image}{\r\n            opacity:0.4;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom:4px;\r\n    right:5px;\r\n    position:absolute;    \r\n    transition:opacity 0.3s ease-in-out;\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display:block;    \r\n    margin-bottom:3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size:10px;\r\n    color:rgba(255, 255, 255, 0.7);\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie=false}) =>\r\n\r\n    <Link to={isMovie? `/movie/${id}` : `/tv/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : \r\n                    require(\"../assets/default.png\")}/>\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\"> \r\n                        ⭐️\r\n                    </span>{\" \"}\r\n                    {rating}/10\r\n                </Rating>\r\n                \r\n            </ImageContainer>\r\n            <Title>{title.length > 15 ? `${title.substring(0,16)}...` : title}</Title>\r\n            <Year>{year}</Year>        \r\n        </Container>\r\n    </Link>\r\n\r\n\r\n\r\nPoster.propTypes = {\r\n    id:PropTypes.number.isRequired,\r\n    imageUrl:PropTypes.string,\r\n    title:PropTypes.string.isRequired,\r\n    rating:PropTypes.number,\r\n    year:PropTypes.string,\r\n    isMovie:PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"component/Section\";\r\nimport Loader from \"component/Loader\";\r\nimport Error from \"component/Error\";\r\nimport Poster from \"../../component/Poster\";\r\nimport Helmet from \"react-helmet\"\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;  \r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, topRated, popular, error, loading }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n        <Helmet>\r\n            Movie | hoTest\r\n        </Helmet>\r\n      {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n          {nowPlaying.map(movie => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              title={movie.original_title}\r\n              imageUrl={movie.poster_path}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"topRated\">\r\n          {topRated.map(movie => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              title={movie.original_title}\r\n              imageUrl={movie.poster_path}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"popular\">\r\n          {popular.map(movie => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              title={movie.original_title}\r\n              imageUrl={movie.poster_path}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Error text={error}></Error>}\r\n    </Container>\r\n  );\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n});\r\n\r\nexport const movieApi = {\r\n    nowPlaying:() => api.get(\"movie/now_playing\", {\r\n        params:{\r\n            api_key:\"5f9c7b977d56104f394ab0ac267e17d7\",\r\n            language:\"en-US\"        \r\n        }\r\n    }),    \r\n\r\n    topRated:() => api.get(\"movie/top_rated\", {\r\n        params:{\r\n            api_key:\"5f9c7b977d56104f394ab0ac267e17d7\",\r\n            language:\"en-US\"        \r\n        }\r\n    }),\r\n\r\n    popular:() => api.get(\"movie/popular\", {\r\n        params:{\r\n            api_key:\"5f9c7b977d56104f394ab0ac267e17d7\",\r\n            language:\"en-US\"        \r\n        }\r\n    }),\r\n    movieDetail:(id) => api.get(`movie/${id}`, {\r\n        params:{\r\n            api_key:\"5f9c7b977d56104f394ab0ac267e17d7\",\r\n            language:\"en-US\",        \r\n            append_to_response:\"videos\"\r\n        }\r\n    }),\r\n    search:(term) => api.get(\"search/movie\", {\r\n        params:{\r\n            api_key:\"5f9c7b977d56104f394ab0ac267e17d7\",\r\n            language:\"en-US\",        \r\n            query: encodeURI(term)\r\n        }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n    topRated:() => api.get(\"tv/top_rated\", {\r\n        params:{\r\n            api_key:\"5f9c7b977d56104f394ab0ac267e17d7\",\r\n            language:\"en-US\"        \r\n        }\r\n    }),\r\n    popular:() => api.get(\"tv/popular\", {\r\n        params:{\r\n            api_key:\"5f9c7b977d56104f394ab0ac267e17d7\",\r\n            language:\"en-US\"        \r\n        }\r\n    }),\r\n    airingToday:() => api.get(\"tv/airing_today\", {\r\n        params:{\r\n            api_key:\"5f9c7b977d56104f394ab0ac267e17d7\",\r\n            language:\"en-US\"        \r\n        }\r\n    }),\r\n    showDetail:(id) => api.get(`tv/${id}`, {\r\n        params:{\r\n            api_key:\"5f9c7b977d56104f394ab0ac267e17d7\",\r\n            language:\"en-US\",  \r\n            append_to_response:\"tv\"\r\n        }\r\n    }),\r\n    search:(term) => api.get(\"search/tv\", {\r\n        params:{\r\n            api_key:\"5f9c7b977d56104f394ab0ac267e17d7\",\r\n            language:\"en-US\",  \r\n            query: encodeURI(term)\r\n        }\r\n    })    \r\n};\r\n\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { movieApi } from \"../../api\";\r\n\r\n\r\n\r\nexport default class extends React.Component{\r\n\r\n    state = {\r\n        nowPlaying : null,\r\n        topRated : null,\r\n        popular : null,\r\n        error : null,\r\n        loading : true\r\n    }\r\n\r\n    async componentDidMount(){\r\n        try{            \r\n\r\n            const {data:{results:nowPlaying}} = await movieApi.nowPlaying();  \r\n            const {data:{results:topRated}} = await movieApi.topRated();        \r\n            const {data:{results:popular}} = await movieApi.popular();          \r\n\r\n            // throw Error();\r\n\r\n            this.setState({\r\n                nowPlaying,\r\n                topRated,\r\n                popular                \r\n            });\r\n\r\n            \r\n\r\n        }catch(error){  \r\n            this.setState({\r\n                error:\"Can't get Movie infomation\"\r\n            });\r\n        }finally {\r\n            this.setState({\r\n                loading:false\r\n            });            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state);\r\n        const {nowPlaying, topRated, popular, error, loading} = this.state;        \r\n        return(        \r\n            <HomePresenter\r\n                nowPlaying = {nowPlaying}\r\n                topRated = {topRated}\r\n                popular = {popular}\r\n                error = {error}\r\n                loading = {loading}\r\n            />        \r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"component/Section\";\r\nimport Loader from \"component/Loader\";\r\nimport Error from \"component/Error\";\r\nimport Poster from \"component/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"topRated\">\r\n          {topRated.map(tv => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              title={tv.original_name}\r\n              imageUrl={tv.poster_path}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              isMovie={false}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"popular\">\r\n          {popular.map(tv => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              title={tv.original_name}\r\n              imageUrl={tv.poster_path}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              isMovie={false}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"airingToday\">\r\n          {airingToday.map(tv => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              title={tv.original_name}\r\n              imageUrl={tv.poster_path}\r\n              rating={tv.vote_average}\r\n              year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              isMovie={false}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Error text={error}></Error>}\r\n    </Container>\r\n  );\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated:null,\r\n        popular:null,\r\n        airingToday:null,\r\n        loading:true,\r\n        error:null\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const {data:{results:topRated}} = await tvApi.topRated();\r\n            const {data:{results:popular}} = await tvApi.popular();\r\n            const {data:{results:airingToday}} = await tvApi.airingToday();\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            });            \r\n\r\n        }catch(error){  \r\n            this.setState({\r\n                error:\"Can't get Movie infomation\"\r\n            });\r\n        }finally {\r\n            this.setState({\r\n                loading:false\r\n            });            \r\n        }\r\n    }\r\n\r\n    render(){        \r\n        console.log(\"showcontainer\");\r\n        console.log(this.state);\r\n        const {topRated, popular, airingToday, loading, error} = this.state;\r\n        return <TVPresenter\r\n            topRated = {topRated}\r\n            popular = {popular}\r\n            airingToday= {airingToday}\r\n            loading= {loading}\r\n            error = {error}\r\n        />;\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../component/Loader\";\r\nimport Section from \"../../component/Section\";\r\nimport Error from \"component/Error\";\r\nimport Poster from \"component/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  width: 100%;\r\n  font-size: 28px;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResult,\r\n  tvResult,\r\n  searchTerm,\r\n  loading,\r\n  error,\r\n  handleSumit,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Form onSubmit={handleSumit}>\r\n      <Input\r\n        placeholder=\"Search Movie or TV Show\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      ></Input>\r\n    </Form>\r\n\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResult && movieResult.length > 0 && (\r\n          <Section title=\"movie Result\">\r\n            {movieResult.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_data && movie.release_data.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResult && tvResult.length > 0 && (\r\n          <Section title=\"tv Result\">\r\n            {tvResult.map(tv => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n                isMovie={false}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Error text={error}></Error>}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResult: PropTypes.array,\r\n  tvResult: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  handleSumit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component{\r\n\r\n    state = {\r\n        movieResult:null,\r\n        tvResult:null,\r\n        searchTerm:\"\",\r\n        loading:false,\r\n        error:null\r\n    }\r\n\r\n\r\n    handleSumit = (event) => {\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        if(searchTerm !== \"\"){\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = (event) => {\r\n        const {target : {value}} = event;\r\n        this.setState({\r\n            searchTerm:value\r\n        })\r\n    }\r\n\r\n    searchByTerm = async () => {\r\n        const {searchTerm} = this.state;\r\n        try{            \r\n            const {data:{results:movieResult}} = await movieApi.search(searchTerm);\r\n            const {data:{results:tvResult}} = await tvApi.search(searchTerm);            \r\n            this.setState({\r\n                movieResult,\r\n                tvResult\r\n            });\r\n            this.setState({loading:true});\r\n        }catch(error){  \r\n            this.setState({\r\n                error:\"Can't get Movie infomation\"\r\n            });\r\n        }finally {\r\n            this.setState({\r\n                loading:false\r\n            });            \r\n        }\r\n    };\r\n\r\n    render(){\r\n        const {movieResult, tvResult, searchTerm, loading, error} = this.state;        \r\n        return(\r\n            <SearchPresenter\r\n                movieResult={movieResult}\r\n                tvResult={tvResult}\r\n                searchTerm = {searchTerm}\r\n                loading={loading}\r\n                error={error}\r\n                handleSumit={this.handleSumit}\r\n                updateTerm = {this.updateTerm}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../component/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 80px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0%;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemCotainer = styled.div`\r\n    margin-bottom:20px;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst OverView = styled.p`\r\n    font-size:12px;\r\n    opacity:0.7;\r\n    line-height:1.5;\r\n    width:50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/default.png\")\r\n          }\r\n        />\r\n\r\n        <Data>\r\n          <Title>\r\n            {result.original_title ? result.original_title : result.name}\r\n          </Title>\r\n          <ItemCotainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date\r\n                : result.first_air_date}\r\n            </Item>\r\n            <Divider>●</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>●</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1 ? genre.name : `${genre.name}/`\r\n                )}\r\n            </Item>\r\n          </ItemCotainer>\r\n          <OverView>\r\n              {result.overview }\r\n          </OverView>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { movieApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }      \r\n    } = this.props;\r\n    \r\n    console.log(id);\r\n    const parseId = parseInt(id);\r\n    const { isMovie } = this.state;\r\n    console.log(parseId);\r\n    if (isNaN(parseId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({data:result} = await movieApi.movieDetail(parseId));\r\n      } else {\r\n        ({data:result} = await tvApi.showDetail(parseId));\r\n      }      \r\n    } catch {\r\n      this.setState({ error: \"Can't find anyting.\" });\r\n    } finally {\r\n      this.setState({\r\n        result,\r\n        loading: false,        \r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    console.log(\"godopu\");\r\n    console.log(result);\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst List = styled.ul`\r\n    display:flex;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    color:white;\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:40px;  \r\n    align-items:center;    \r\n    display:flex;\r\n    padding:0px 10px;      \r\n    background-color : rgba(20, 20,20, 0.8);\r\n    box-shadow:0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n    z-index:10;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width:80px;\r\n    height:40px;\r\n    text-align:center;    \r\n    border-bottom:3px solid\r\n    ${props => (props.current ? \"#3498db\":\"transparent\")};\r\n    transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    width:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n`;\r\n\r\nconst HeaderC =({location:{pathname}}) => (\r\n    <Header>        \r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink to=\"/\">Movie</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}> \r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n);\r\n\r\nexport default withRouter(HeaderC);","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\r\nimport Home from \"route/Home\";\r\nimport TV from \"route/TV\";\r\nimport Search from \"route/Search\";\r\nimport Detail from \"route/Detail\";\r\nimport Header from 'component/Header'\r\n\r\nexport default () => (\r\n    <Router>        \r\n        <Header/>\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Home}></Route>\r\n            <Route path=\"/movie\" exact component={Home}></Route>\r\n            <Route path=\"/tv\" exact component={TV}></Route>\r\n            <Route path=\"/Search\" exact component={Search}></Route>\r\n            <Route path=\"/movie/:id\" exact component={Detail}></Route>\r\n            <Route path=\"/tv/:id\" exact component={Detail}></Route>\r\n            \r\n        </Switch>        \r\n    </Router>\r\n)\r\n\r\n","import {createGlobalStyle} from 'styled-components'\r\nimport reset from 'styled-reset'\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:boder-box;\r\n    }\r\n    body{\r\n        font-size:14px;\r\n        background-color:rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React, { Fragment } from 'react';\nimport Router from 'component/Router';\nimport Header from 'component/Header';\nimport GlobalStyled from 'component/GlobalStyled';\n\nfunction App() {\n  return (\n    <Fragment>            \n      <Router/>\n      <GlobalStyled/>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'component/App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}